(def s "assadadsadas?")
(last s)
(= '?' (last s))
(=\? (last s))
(def s "Does this cryogenic chamber make me look fat?")
(seq s)
(-> s seq last)
(= (-> s seq last) \?)
(def p "WATCH OUT!")
p
(drop-last p)
(upper-case "sasdas")
(string/upper-case "asdasd")
(clojure.string/capitalize "saasdas)
(clojure.string/capitalize "saasdas")
(clojure.string/upper-case "saasdas")
(clojure.string/upper-case p)
(clojure.string/upper-case (drop-last p))
(= (drop-last p) (clojure.string/upper-case (drop-last p))
(= (drop-last p) (clojure.string/upper-case (drop-last p)))
(drop-last p)
(= (drop-last p) (clojure.string/upper-case p)))
(= (drop-last p) (clojure.string/upper-case p))
(= (drop-last p) (drop-last (clojure.string/upper-case p)))
(= "asasdasd" "")
(= "" "")
(def s "1,2,3")
(char? s)
(map char? s)
(map number? s)
s
(map Character/isLetter "sadasdas")
(map Character/isLetter? "sadasdas")
(Character/isLetter? "s")
(.replaceAll "ij443kj" "[^0-9]" "")
(filter (fn [x] (Character/isLetter x)) "abc")
(filter (fn [x] (Character/isLetter x)) "abc121332")
(map (fn [x] (Character/isLetter x)) "abc121332")
(map #(Character/isLetter %) "abc121332")
(any (map #(Character/isLetter %) "abc121332"))
(some? (map #(Character/isLetter %) "abc121332"))
(def sn "1,2,3")
(some? (map #(Character/isLetter %) sn))
(map #(Character/isLetter %) sn)
(some? (map #(Character/isLetter %) sn))
(any? (map #(Character/isLetter %) sn))
(map #(Character/isLetter %) sn)
(some true? (map #(Character/isLetter %) sn))
