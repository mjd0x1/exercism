(def t {"a" 23, "b" 24})
(t "a")
(require '[clojure.string :as str]) 
(str/upper-case "a") 
(require '[clojure.string :as str]) 
(ns scrabble-score)
(def letters {"A" 1, "E" 1, "I" 1 , "O" 1, "U" 1, "L" 1, "N" 1, "R" 1,"S" 1, "T" 1,
              "D" 2, "G" 2,
              "B" 3, "C" 3, "M" 3, "P" 3,
              "F" 4, "H" 4, "V" 4, "W" 4, "Y" 4,
              "K" 5,
              "J" 8, "X" 8,
              "Q" 10, "Z" 10})
(defn score-letter [c] 
    (letters (str/upper-case c))
)
(defn score-letter [c] 
    (letters (str/upper-case c))
)
(require '[clojure.string :as str]) 
(def letters {"A" 1, "E" 1, "I" 1 , "O" 1, "U" 1, "L" 1, "N" 1, "R" 1,"S" 1, "T" 1,
              "D" 2, "G" 2,
              "B" 3, "C" 3, "M" 3, "P" 3,
              "F" 4, "H" 4, "V" 4, "W" 4, "Y" 4,
              "K" 5,
              "J" 8, "X" 8,
              "Q" 10, "Z" 10})
(defn score-letter [c] 
    (letters (str/upper-case c))
)
(score-letter "C")
(map #(score-letter %) "abba")
(apply + (map #(score-letter %) "abba"))
(defn score-word [word] 
  (apply + (map #(score-letter %) word))
)
(score-word "street")
